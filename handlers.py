import logging
from aiogram import Router, F, Bot
from aiogram.filters import CommandStart
from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

from api_client import SYSTEM_PROMPT, call_ai
from core import settings

router = Router()

# –•—Ä–∞–Ω–∏–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ user_id
memory: dict[int, list[dict]] = {}


class UserForm(StatesGroup):
    waiting_for_contact = State()
    waiting_for_confirmation = State()


@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    user_id = message.from_user.id
    memory[user_id] = [{"role": "system", "content": SYSTEM_PROMPT}]
    memory[user_id].append({"role": "assistant", "content": "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ. –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ?"})

    kb = ReplyKeyboardMarkup(
        resize_keyboard=True,
        keyboard=[[KeyboardButton(text="–î–∞, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ")]]
    )

    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ. –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ?", reply_markup=kb)


@router.message(F.text == '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
async def form_handler(message: Message, state: FSMContext):
    await message.answer(
        'üìã –ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É, –ø—Ä–∏—à–ª–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ @username. –ú—ã —Å–≤—è–∂–µ–º—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞.')
    await state.set_state(UserForm.waiting_for_contact)


@router.message(UserForm.waiting_for_contact)
async def form_data_handler(message: Message, bot: Bot):
    text = message.text
    await message.answer(
        f'–°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç {text} –∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–∏—à–∏—Ç–µ, –±—É–¥–µ–º —Ä–∞–¥—ã –ø–æ–º–æ—á—å!')
    await bot.send_message(
        text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É. –ö–æ–Ω—Ç–∞–∫—Ç—ã: {text}',
        chat_id=settings.telegram_id
    )


@router.message()
async def handle_message(message: Message):
    user_id = message.from_user.id

    if user_id not in memory:
        memory[user_id] = [{"role": "system", "content": SYSTEM_PROMPT}]

    history = memory[user_id]
    history.append({"role": "user", "content": message.text})

    data = await call_ai(user_id, history)
    reply_text = data.get("reply", "–û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞")
    buttons = data.get("buttons", [])

    if buttons:
        kb = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[[KeyboardButton(text=b)] for b in buttons])
        await message.answer(reply_text, reply_markup=kb, parse_mode="HTML")
    else:
        await message.answer(reply_text, parse_mode="HTML")

    history.append({"role": "assistant", "content": reply_text})
